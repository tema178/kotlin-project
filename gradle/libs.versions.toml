[versions]
kotlin = "2.1.0"

# BASE
jvm-compiler = "17"
jvm-language = "21"

openapi-generator = "7.12.0"
jackson = "2.18.3"
kotlinx-datetime = "0.6.2"
kotlinx-serialization = "1.6.3"
coroutines = "1.9.0"
logback = "1.5.3"

#Frameworks
spring-boot = "3.2.0"

# Docker
muschko = "9.4.0"

[libraries]
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-binaryCompatibilityValidator = "org.jetbrains.kotlinx:binary-compatibility-validator:0.13.2"
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.23.2" }
cor = { module = "libs:cor" }

# Spring
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-webflux-ui = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version = "2.3.0" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test" }

# Logging
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-appenders = { module = "com.sndyuk:logback-more-appenders", version = "1.8.8" }
logback-logstash = { module = "net.logstash.logback:logstash-logback-encoder", version = "7.4" }
logger-fluentd = { module = "org.fluentd:fluent-logger", version = "0.3.4" }

kafka-client = { module = "org.apache.kafka:kafka-clients", version = "3.7.0" }


[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
crowdproj-generator = { id = "com.crowdproj.generator", version = "0.3.0" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Spring
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependencies = { id = "io.spring.dependency-management", version = "1.1.4" }
spring-kotlin = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }

# Docker
muschko-remote = { id = "com.bmuschko.docker-remote-api", version.ref = "muschko" }
muschko-java = { id = "com.bmuschko.docker-java-application", version.ref = "muschko" }
